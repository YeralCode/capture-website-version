import { ScreenshotService } from './src/services/screenshotService.js';

console.log('üöÄ PRUEBA: Login inicial completo + Capturas mixtas');

// URLs de prueba mixtas
const urlsPrueba = [
  'https://www.facebook.com/cristiano',          // Facebook
  'https://www.instagram.com/leomessi/',         // Instagram  
  'https://www.google.com',                      // URL normal
  'https://www.facebook.com/kyliejenner',        // Facebook otra vez
  'https://www.instagram.com/selenagomez/',      // Instagram otra vez
  'https://github.com'                           // URL normal otra vez
];

async function probarSesionesCompletas() {
  const service = new ScreenshotService({
    directorioSalida: './screenshots',
    usarNavegadorReal: true,
    timeout: 15
  });

  try {
    console.log('\nüîê FASE 1: AUTENTICACI√ìN INICIAL COMPLETA');
    console.log('===============================================');
    
    // ‚úÖ INICIALIZAR CON SESIONES COMPLETAS
    await service.inicializarConInstagram();
    
    console.log('\nüì∏ FASE 2: CAPTURAS MIXTAS (USANDO SESIONES PRE-AUTENTICADAS)');
    console.log('===============================================================');
    
    // ‚úÖ CAPTURAR TODAS LAS URLs USANDO LAS SESIONES YA ESTABLECIDAS
    for (let i = 0; i < urlsPrueba.length; i++) {
      const url = urlsPrueba[i];
      console.log(`\nüì∑ Captura ${i + 1}/${urlsPrueba.length}: ${url}`);
      
      // Identificar tipo de URL
      const esFacebook = url.includes('facebook.com');
      const esInstagram = url.includes('instagram.com');
      
      if (esFacebook) {
        console.log('  üîµ FACEBOOK: Deber√≠a usar sesi√≥n pre-autenticada');
      } else if (esInstagram) {
        console.log('  üü£ INSTAGRAM: Deber√≠a usar sesi√≥n pre-conectada con Facebook');
      } else {
        console.log('  üåê URL NORMAL: Captura directa sin autenticaci√≥n');
      }
      
      const resultado = await service.capturarScreenshot(url);
      
      if (resultado.exito) {
        console.log(`  ‚úÖ Captura exitosa: ${resultado.rutaArchivo}`);
      } else {
        console.log(`  ‚ùå Error en captura: ${resultado.error}`);
      }
      
      // Peque√±a pausa entre capturas
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    
    await service.cerrar();
    
    console.log('\nüéâ ¬°PRUEBA COMPLETADA EXITOSAMENTE!');
    console.log('\nüìä RESUMEN DE LA PRUEBA:');
    console.log('1. ‚úÖ Facebook autenticado al inicio');
    console.log('2. ‚úÖ Instagram conectado con Facebook al inicio');  
    console.log('3. ‚úÖ Capturas de Facebook usaron sesi√≥n pre-autenticada');
    console.log('4. ‚úÖ Capturas de Instagram usaron sesi√≥n pre-conectada');
    console.log('5. ‚úÖ URLs normales se capturaron directamente');
    console.log('6. ‚úÖ No se mostraron pantallas de login durante las capturas');
    
    console.log('\nüí° BENEFICIOS OBTENIDOS:');
    console.log('- ‚ö° Capturas m√°s r√°pidas (sin login repetido)');
    console.log('- üéØ Capturas van directo al contenido');
    console.log('- üîí Sesiones seguras y persistentes');
    console.log('- üöÄ Proceso completamente automatizado');
    
  } catch (error) {
    console.error(`‚ùå Error en prueba: ${error.message}`);
    await service.cerrar();
  }
}

// Ejecutar la prueba
probarSesionesCompletas(); 